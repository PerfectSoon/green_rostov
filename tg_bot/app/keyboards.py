from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup, DateTime
from aiogram.utils.keyboard import InlineKeyboardBuilder
from collections import defaultdict


main_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='üîñ –ú–æ–∏ –∑–∞–¥–∞—á–∏ üîñ')],
    [KeyboardButton(text='‚è∞ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚è∞')],
], resize_keyboard=True)


notifications = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üîï –í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="toggle_notifications"),
            InlineKeyboardButton(text="üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="toggle_notifications")
        ]
    ]
)


def generate_task_keyboard(tasks):
    keyboard = InlineKeyboardBuilder()
    for task in tasks:
        keyboard.button(
            text=task['title'],  # –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
            callback_data=f"task_{task['id']}"  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π callback_data
        )
    return keyboard.as_markup()

def generate_column_task_keyboard(tasks):
    grouped_tasks = defaultdict(list)
    for task in tasks:
        column_name = task.get("column_name", "–ë–µ–∑ –∫–æ–ª–æ–Ω–∫–∏")
        grouped_tasks[column_name].append(task)

    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
    column_keyboards = {}
    for column_name, tasks_in_column in grouped_tasks.items():
        keyboard = InlineKeyboardBuilder()
        for task in tasks_in_column:
            keyboard.button(
                text=task["title"],
                callback_data=f"task_{task['id']}"
            )
        column_keyboards[column_name] = keyboard.as_markup()

    return column_keyboards
